parameters:
- name: deploymentBranch
  displayName: Branch to Deploy
  type: string
  default: refs/heads/master

- name: environment
  displayName: Environment
  type: string
  default: Sandbox
  values:
  - Preview
  - Dev
  - AAT
  - Sandbox
  - Test1
  - Test2
  - Demo
  - Preprod
  - Prod

- name: RunZap
  displayName: Execute ZAP Tests
  type: boolean
  default: false

- name: prodEnvs
  displayName: Environments Using Prod Subscription
  type: object
  default:
    - Prod
    - Preprod
 
# Set variables once
variables:
- group: vh-domains-and-urls
- group: vh-apps-settings-generic
- group: vh-test-api
- ${{ if ne(variables['Build.Reason'], 'ResourceTrigger') }}:
  - ${{ if containsValue(parameters.prodEnvs, parameters.environment) }}:
    - group: vh-prod
  - ${{ if not(containsValue(parameters.prodEnvs, parameters.environment)) }}:
    - group: vh-preview
- ${{ if eq(variables['Build.Reason'], 'ResourceTrigger') }}:
  - ${{ if or(startswith(variables['Build.SourceBranch'], 'refs/heads/release/'), startswith(variables['Build.SourceBranch'], 'refs/heads/hotfix/')) }}:
    - group: vh-prod
  - ${{ if not(or(startswith(variables['Build.SourceBranch'], 'refs/heads/release/'), startswith(variables['Build.SourceBranch'], 'refs/heads/hotfix/'))) }}:
    - group: vh-preview

trigger: none
pr: none

resources:
  repositories:
    - repository: templates
      type: github
      name: hmcts/azure-devops-templates
      ref: refs/heads/master
      endpoint: hmcts_shaed
  pipelines:
  - pipeline: CI
    source: hmcts.vh-test-api
    trigger:
      enabled: true
      branches:
        - master
        - hotfix/*
        - release/*

extends:
  template: templates/vh-release.yml@templates
  parameters:
    ${{ if ne(variables['Build.Reason'], 'ResourceTrigger') }}:
      environments:
        - ${{ parameters.environment }}
      deploymentBranch: ${{ parameters.deploymentBranch }}
    ${{ if eq(variables['Build.Reason'], 'ResourceTrigger') }}:
      deploymentBranch: resources.pipeline.CI.sourceBranch
    releaseParameters:
      runACTests: false
      runZapTests: ${{ parameters.RunZap }}
      subscription: $(env_Subscription)
      secrets_KeyVault: $(env_Secret_KeyVault)
      secrets_Subscription: $(env_Secret_Subscription)
      devOpsResource: vh_test_api
      appName: vh-test-api-$(environment)
      resourceGroup: vh-test-api-$(environment)
      variables:
          - group: vh-wowza-dev
            env:
             - Preview
             - Dev
             - AAT
             - Sandbox
             - Test1
             - Test2
          - group: vh-wowza-demo
            env:
             - Demo
          - group: vh-wowza-preprod
            env:
             - Preprod
          - group: vh-wowza-prod
            env:
             - Prod
      appSettings:
        - name: ApplicationInsights:InstrumentationKey
          value: vh-core-infra-AppInsightsKey
          secret: true
        - name: AzureAd:ClientId
          value: vh-test-api-appid
          secret: true
        - name: AzureAd:ClientSecret
          value: vh-test-api-key
          secret: true
        - name: AzureAd:TenantId
          value: tenantid
          secret: true
        - name: ConnectionStrings:TestApi
          value: TestApiDb-connection-str
          secret: true
        - name: IsLive
          value: false
        - name: Services:BookingsApiResourceId
          value: vh-bookings-api-identifieruris
          secret: true
        - name: Services:BookingsApiUrl
          value: $(bookings_api_url)
        - name: Services:TestApiResourceId
          value: vh-test-api-identifieruris
          secret: true
        - name: Services:UserApiResourceId
          value: vh-user-api-identifieruris
          secret: true
        - name: Services:UserApiUrl
          value: $(user_api_url)
        - name: Services:VideoApiResourceId
          value: vh-video-api-identifieruris
          secret: true
        - name: Services:VideoApiUrl
          value: $(video_api_url)
        - name: TestDefaultPassword
          value: $(TestDefaultPassword)
        - name: UsernameStem
          value: $(UsernameStem)
        - name: UserGroups:JudgeGroups
          value: $(UserGroups:JudgeGroups)
        - name: UserGroups:IndividualGroups
          value: $(UserGroups:IndividualGroups)
        - name: UserGroups:RepresentativeGroups
          value: $(UserGroups:RepresentativeGroups)
        - name: UserGroups:VideoHearingsOfficerGroups
          value: $(UserGroups:VideoHearingsOfficerGroups)
        - name: UserGroups:CaseAdminGroups
          value: $(UserGroups:CaseAdminGroups)
        - name: UserGroups:KinlyGroups
          value: $(UserGroups:KinlyGroups)
        - name: UserGroups:KinlyProdGroups
          value: $(UserGroups:KinlyProdGroups)
        - name: UserGroups:TestAccountGroups
          value: $(UserGroups:TestAccountGroups)
        - name: UserGroups:TestWebGroups
          value: $(UserGroups:TestWebGroups)  
        - name: UserGroups:PerformanceTestAccountGroups
          value: $(UserGroups:PerformanceTestAccountGroups)
        - name: UserGroups:JudicialOfficeGroups
          value: $(UserGroups:JudicialOfficeGroups)

        # WowzaConfiguration
        - name: WowzaConfiguration:StorageAccountName
          value: $(wowza_storageAccountName)
        - name: WowzaConfiguration:StorageAccountKey
          value: $(wowza_storageAccountKey)
        - name: WowzaConfiguration:StorageContainerName
          value: $(wowza_storageContainerName)
      acceptanceTestSettings:
        - name: ApplicationInsights:InstrumentationKey
          value: vh-core-infra-AppInsightsKey
          secret: true
        - name: AzureAd:ClientId
          value: vh-test-api-appid
          secret: true
        - name: AzureAd:ClientSecret
          value: vh-test-api-key
          secret: true
        - name: AzureAd:TenantId
          value: tenantid
          secret: true
        - name: IsLive
          value: false
        - name: Services:BookingsApiResourceId
          value: vh-bookings-api-identifieruris
          secret: true
        - name: Services:BookingsApiUrl
          value: $(bookings_api_url)
        - name: Services:TestApiUrl
          value: $(test_api_url)
        - name: Services:TestApiResourceId
          value: vh-test-api-identifieruris
          secret: true  
        - name: Services:UserApiResourceId
          value: vh-user-api-identifieruris
          secret: true
        - name: Services:UserApiUrl
          value: $(user_api_url)
        - name: Services:VideoApiResourceId
          value: vh-video-api-identifieruris
          secret: true
        - name: Services:VideoApiUrl
          value: $(video_api_url)
        - name: TestDefaultPassword
          value: $(TestDefaultPassword)
        - name: UsernameStem
          value: $(UsernameStem)
        - name: UserGroups:JudgeGroups
          value: $(UserGroups:JudgeGroups)
        - name: UserGroups:IndividualGroups
          value: $(UserGroups:IndividualGroups)
        - name: UserGroups:RepresentativeGroups
          value: $(UserGroups:RepresentativeGroups)
        - name: UserGroups:VideoHearingsOfficerGroups
          value: $(UserGroups:VideoHearingsOfficerGroups)
        - name: UserGroups:CaseAdminGroups
          value: $(UserGroups:CaseAdminGroups)
        - name: UserGroups:KinlyGroups
          value: $(UserGroups:KinlyGroups)
        - name: UserGroups:KinlyProdGroups
          value: $(UserGroups:KinlyProdGroups)
        - name: UserGroups:TestAccountGroups
          value: $(UserGroups:TestAccountGroups)
        - name: UserGroups:TestWebGroups
          value: $(UserGroups:TestWebGroups)  
        - name: UserGroups:PerformanceTestAccountGroups
          value: $(UserGroups:PerformanceTestAccountGroups)
        - name: UserGroups:JudicialOfficeGroups
          value: $(UserGroups:JudicialOfficeGroups)

        # WowzaConfiguration
        - name: WowzaConfiguration:StorageAccountName
          value: $(wowza_storageAccountName)
        - name: WowzaConfiguration:StorageAccountKey
          value: $(wowza_storageAccountKey)
        - name: WowzaConfiguration:StorageContainerName
          value: $(wowza_storageContainerName)