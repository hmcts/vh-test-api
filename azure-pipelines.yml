parameters:
- name: PackageApp
  displayName: Package App
  type: boolean
  default: true

- name: PackageACTests
  displayName: Package Acceptance Tests
  type: boolean
  default: false

- name: RunUnitTests
  displayName: Run Unit Tests
  type: boolean
  default: true

- name: RunIntegTests
  displayName: Run Integration Tests
  type: boolean
  default: true

- name: RunSonarCloudTests
  displayName: Run Sonar Cloud Analysis
  type: boolean
  default: true

- name: RunMutationTests
  displayName: Run Mutation Tests
  type: boolean
  default: false

- name: RunACTests
  displayName: Run Acceptance Tests
  type: boolean
  default: false

- name: testSettings
  type: object
  default:
  - name: ApplicationInsights:InstrumentationKey
    value: vh-core-infra-AppInsightsKey
  - name: AzureAd:ClientId
    value: vh-test-api-appid
    secret: true
  - name: AzureAd:ClientSecret
    value: vh-test-api-key
    secret: true
  - name: AzureAd:TenantId
    value: tenantid
    secret: true
  - name: AzureAd:ValidAudience
    value: vh-test-api-identifieruris
    secret: true
  - name: ConnectionStrings:TestApi
    value: TestApiDb-connection-str
    secret: true
  - name: IsLive
    value: false
  - name: TestDefaultPassword
    value: $(TestDefaultPassword)
  - name: UsernameStem
    value: $(UsernameStem)
  - name: UserGroups:JudgeGroups
    value: $(UserGroups:JudgeGroups)
    type: json
  - name: UserGroups:IndividualGroups
    value: $(UserGroups:IndividualGroups)
    type: json
  - name: UserGroups:RepresentativeGroups
    value: $(UserGroups:RepresentativeGroups)
    type: json
  - name: UserGroups:VideoHearingsOfficerGroups
    value: $(UserGroups:VideoHearingsOfficerGroups)
    type: json
  - name: UserGroups:CaseAdminGroups
    value: $(UserGroups:CaseAdminGroups)
    type: json
  - name: UserGroups:KinlyGroups
    value: $(UserGroups:KinlyGroups)
    type: json
  - name: UserGroups:TestAccountGroup
    value: $(UserGroups:TestAccountGroup)
  - name: UserGroups:PerformanceTestAccountGroup
    value: $(UserGroups:PerformanceTestAccountGroup)

  # WowzaConfiguration
  - name: WowzaConfiguration:StorageAccountName
    value: $(wowza_storageAccountName)
  - name: WowzaConfiguration:StorageAccountKey
    value: $(wowza_storageAccountKey)
  - name: WowzaConfiguration:StorageContainerName
    value: $(wowza_storageContainerName)

- name: appSettings
  type: object
  default:
  - name: ApplicationInsights:InstrumentationKey
    value: vh-core-infra-AppInsightsKey
  - name: AzureAd:ClientId
    value: vh-test-api-appid
    secret: true
  - name: AzureAd:ClientSecret
    value: vh-test-api-key
    secret: true
  - name: AzureAd:TenantId
    value: tenantid
    secret: true
  - name: AzureAd:ValidAudience
    value: vh-test-api-identifieruris
    secret: true
  - name: ConnectionStrings:TestApi
    value: TestApiDb-connection-str
    secret: true
  - name: IsLive
    value: false
  - name: TestDefaultPassword
    value: $(TestDefaultPassword)
  - name: UsernameStem
    value: $(UsernameStem)
  - name: UserGroups:JudgeGroups
    value: $(UserGroups:JudgeGroups)
    type: json
  - name: UserGroups:IndividualGroups
    value: $(UserGroups:IndividualGroups)
    type: json
  - name: UserGroups:RepresentativeGroups
    value: $(UserGroups:RepresentativeGroups)
    type: json
  - name: UserGroups:VideoHearingsOfficerGroups
    value: $(UserGroups:VideoHearingsOfficerGroups)
    type: json
  - name: UserGroups:CaseAdminGroups
    value: $(UserGroups:CaseAdminGroups)
    type: json
  - name: UserGroups:KinlyGroups
    value: $(UserGroups:KinlyGroups)
    type: json
  - name: UserGroups:TestAccountGroup
    value: $(UserGroups:TestAccountGroup)
  - name: UserGroups:PerformanceTestAccountGroup
    value: $(UserGroups:PerformanceTestAccountGroup)

  # WowzaConfiguration
  - name: WowzaConfiguration:StorageAccountName
    value: $(wowza_storageAccountName)
  - name: WowzaConfiguration:StorageAccountKey
    value: $(wowza_storageAccountKey)
  - name: WowzaConfiguration:StorageContainerName
    value: $(wowza_storageContainerName)

variables:
  - group: vh-domains-and-urls
  - group: vh-apps-settings-generic
  - group: vh-wowza-dev

trigger:
  branches:
    include:
    - master
    - release/*
    - hotfix/*

pr:
  branches:
    include:
    - master

resources:
  repositories:
    - repository: templates
      type: github
      name: hmcts/azure-devops-templates
      ref: refs/heads/master
      endpoint: hmcts (1)
  containers:
  - container: dotnetsdk
    image: sspublicsbox.azurecr.io/vh/dotnet:3.1.102
    endpoint: sspublicsbox
  - container: dotnetsdk-cipipeline
    image: sspublicsbox.azurecr.io/vh/dotnet-cipipeline:3.1.102
    endpoint: sspublicsbox

extends:
  template: stages\dotnet-package.yml@templates
  parameters:
    coreProjectPath: TestApi/TestApi
    PackageApp: ${{ parameters.PackageApp }}
    PackageAcceptanceTests: ${{ parameters.PackageACTests }}
    Test: ${{ or(parameters.RunUnitTests, parameters.RunIntegTests, parameters.RunMutationTests) }}
    testParameters:
      baseAgent: windows-latest
      coreProjectPath: TestApi/TestApi
      unitTestProjectPath: TestApi/TestApi.UnitTests
      integTestProjectPath: TestApi/TestApi.IntegrationTests
      secrets_KeyVault: $(pr_Secret_KeyVault)
      secrets_Subscription: $(pr_Secret_Subscription)
      RunUnitTests: ${{ parameters.RunUnitTests }}
      RunIntegrationTests: ${{ parameters.RunIntegTests }}
      RunSonarCloud: ${{ parameters.RunSonarCloudTests }}
      RunStryker: ${{ parameters.RunMutationTests }}
      IntegrationTestSettings:
        - ${{ each setting in parameters.testSettings }}:
          - name: ${{ setting.name }}
            value: ${{ setting.value }}
            secret: ${{ setting.secret }}
      variables:
        - group: vh-test-api
      coverletCoverageExclusions:
        - "[TestApi.*Tests?]*"
        - "[TestApi.API]Startup"
        - "[TestApi.Common]*"
        - "[Testing.Common]*"
      sonarCloud_ExtraProperties: |
        sonar.cs.opencover.reportsPaths=$(Common.TestResultsDirectory)/Coverage/coverage.opencover.xml
        sonar.coverage.exclusions="**/TestApi/Swagger/**, **/Program.cs, **/Startup.cs, **/Testing.Common/**, **/TestApi.Common/**, **/TestApi.IntegrationTests/**, **/TestApi.UnitTests/**, **/TestApi/Helper/**, **/TestApi/ConfigureServicesExtensions.cs, **/TestApi/Extensions/**"
        sonar.cpd.exclusions="**/Program.cs, **/Startup.cs, **/Testing.Common/**, **/TestApi/Swagger/**"
      StrykerBreak: 75
    ACTest: ${{ parameters.RunACTests }}
    releaseParameters:
      environment: Preview

      subscription: $(pr_Subscription)
      secrets_KeyVault: $(pr_Secret_KeyVault)
      secrets_Subscription: $(pr_Secret_Subscription)
      devOpsResource: vh_test_api
      appName: vh-test-api-$(environment)
      resourceGroup: vh-test-api-$(environment)
      variables:
        - group: vh-test-api
      appSettings: ${{ parameters.appSettings }}
      acceptanceTestSettings:
        - name: Services:TestApiUrl
          value: $(test_api_url_staging)
        - ${{ each setting in parameters.testSettings }}:
          - name: ${{ setting.name }}
            value: ${{ setting.value }}
            secret: ${{ setting.secret }}
